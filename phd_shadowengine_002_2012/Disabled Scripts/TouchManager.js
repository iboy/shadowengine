// all of our active trackersvar trackers:ArrayList = new ArrayList();// index is finger id, value is a TouchTrackervar trackerLookup:Hashtable = new Hashtable();/*** Use widescreen orientation*/function Awake(){	//Settings.verticalOrientation = false;}/*** Update all of our trackers*/function Update(){	// clean all touches (so they know if they aren't updated after we pull info)	for(var tracker:TouchTracker in trackers)		tracker.Clean();		// process our touches	for(var touch:Touch in Input.touches)	{		// try to get our tracker for this finger id		var tracker:TouchTracker = trackerLookup[touch.fingerId];				if(tracker)			tracker.Update(touch);		else			tracker = BeginTracking(touch);					// TouchPhase.Ended isn't very reliable (especially with the remote)		/*		if(touch.phase == TouchPhase.Ended)			EndTracking(tracker);		*/	}		// track which events vanished (without using TouchPhase.Ended)	var ended:ArrayList = new ArrayList();		// use an intermediate list because EndTracking removes from trackers arraylist	for(var tracker:TouchTracker in trackers)		if(!tracker.isDirty)			ended.Add(tracker);		for(var tracker:TouchTracker in ended)		EndTracking(tracker);}/*** Start up a tracker for a fingerid*/function BeginTracking(touch:Touch){	var tracker:TouchTracker = new TouchTracker(touch);		// remember our tracker	trackers.Add(tracker);	trackerLookup[touch.fingerId] = tracker;		return tracker;}/*** Clear a tracker from being updated, tell it to stop*/function EndTracking(tracker:TouchTracker){	tracker.End();		trackers.Remove(tracker);	trackerLookup[tracker.fingerId] = null;}